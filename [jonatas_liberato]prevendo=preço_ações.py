# -*- coding: utf-8 -*-
"""[Jonatas-Liberato]prevendo=preço-ações.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EO7Smd7GLuSpTWJP0tOLkWnT_xvDH2ff

# **MÁQUINA PREDITIVA - PREVER PREÇOS DE AÇÕES**

# Introdução

Esse projeto aborda um tema de grande importância para mim, que é o mercado financeiro. 

E para a predição, serão abordados fatores (variáveis) como ação física, psicológica, ação racional, ação lógica e etc.

Além disso, uma técnica estatística importantíssima será aplicada, que é a **Regressão Linear**, o qual usará séries históricas para tenta prever o preço futuro das ações.

--

O nível desse projeto é de iniciante, limitando-se apenas a um treino das técnicas de Machine Learning e gráficos.

O dataset utilizado será esse **[AQUI](https://github.com/alpharithms/data/blob/main/TSLA.csv)**.

# O problema

Sabemos que a imprevisibilidade do mercado de ações é gigantesco, o que torna necessária toda e qualquer ajuda para tentar reduzir perda e elevar lucros.

Para se ter uma noção, nesse ano de 2022 o Brasil atingiu um recorde de pessoas que investem na bolsa, superando a casa dos 4 milhões de pessoas. Fonte: [**AQUI**](https://valorinveste.globo.com/mercados/renda-variavel/bolsas-e-indices/noticia/2022/02/04/bolsa-atinge-42-milhoes-de-investidores-pessoas-fisicas-em-renda-variavel.ghtml)

--

Apesar disso, o Brasil está engatinhando nesse mercado, masmo com tantas possibilidades e o baixo rendimento, por exemplo, da poupança.

# 1 - Análise Exploratória

**Bibliotecas**
"""

import numpy as np
import pandas as pd
import math
import matplotlib.pyplot as plt
from sklearn import preprocessing
from sklearn import metrics
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor

"""**Dataset**"""

# Online
# https://github.com/alpharithms/data/blob/main/TSLA.csv

dataset = pd.read_csv('TSLA.csv')
dataset

dataset.info()

dataset.describe()

dataset

"""# 2 - Pré-Processamento

*Nosso target será o preço de fechamento. Então faremos a separação do dataset, deixando de fora variáveis que pouco possam contribuir com a análise.*
"""

x = dataset[['High', 'Low', 'Open', 'Volume']].values
y = dataset['Close'].values
print(x)

"""**Amostragem**"""

# Separando os dados de treino e de teste
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state=1)

"""# 3 - Máquina Preditiva

**Modelo de Regressão**
"""

#Criando o modelo com Random Forest
# Model = RandomForestRegressor()

# Criando modelo com Regressao Linear
Model = LinearRegression()

# Treinando o modelo
Model.fit(x_train, y_train)

# Usando o modelo para fazer predições (Y)
predicted = Model.predict(x_test)
print(predicted)

# Comparando o teste(X) e o predito(Y)
data = pd.DataFrame({'Atual: ': y_test.flatten(), 'Predito: ': predicted.flatten()})

data.head(20)

"""**Avaliando o Modelo**

Usaremos:
- erro absoluto médio
- erro quadrático médio
- raiz quadrada do erro quadrado médio.
"""

print('Erro Absoluto Médio: ', metrics.mean_absolute_error(y_test, predicted))
print('Erro Quadrático Médio: ', metrics.mean_squared_error(y_test, predicted))
print('Raiz Quadrada do  Médio: ', math.sqrt(metrics.mean_squared_error(y_test, predicted)))

"""**Plotando o resultado**"""

graph = data.head(20)
graph.plot(kind = 'bar')

"""# Conclusão:

*Uma aplicação simples e básica para treinar máquina preditiva para prever o preço de ações*.
"""

#Autor: Jonatas A. Liberato
#Ref: Eduardo Rocha